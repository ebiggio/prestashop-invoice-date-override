{% extends '@PrestaShop/Admin/layout.html.twig' %}

{% block content %}
    {{ form_start(SettingsForm) }}
    <div class="card">
        <h3 class="card-header">
            <i class="material-icons">settings</i> {{ 'Module settings'|trans({}, 'Modules.InvoiceDateOverride.Admin') }}
        </h3>
        <div class="card-body">
            <div class="form-wrapper">
                {{ form_row(SettingsForm.invoice_date_override_order_status) }}
                {{ form_row(SettingsForm.invoice_date_override_on_new_order) }}
                {{ form_row(SettingsForm.invoice_date_override_on_status_change) }}
                {{ form_row(SettingsForm.invoice_date_override_clear_on_unselected_status_change) }}
            </div>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-end">
                <button class="btn btn-primary float-right" id="save-button">
                    {{ 'Save'|trans({}, 'Admin.Actions') }}
                </button>
            </div>
        </div>
    </div>
    <div class="card">
        <h3 class="card-header">
            <i class="material-icons">touch_app</i> {{ 'Manual override'|trans({}, 'Modules.InvoiceDateOverride.Admin') }}
        </h3>
        <div class="card-body">
            <div class="alert alert-info">
                <p>{{ 'The following settings are only used when the manual override is triggered, and will not affect the process that runs based on the module settings. The manual override, however, will respect and use the order status defined on the module settings.'|trans({}, 'Modules.InvoiceDateOverride.Admin') }}</p>
            </div>
            <p>{{ 'You can manually trigger the invoice date override by using the button below, which will update the invoice date on previously created orders that have the selected order status defined on the module settings.'|trans({}, 'Modules.InvoiceDateOverride.Admin') }}</p>
            <div class="alert alert-warning">
                <p>{{ 'This operation is intended to be used if you have orders that won\'t change their status but that need their invoice date updated. This usually happens when using the module on a store that has orders created before the module logic was enabled. Depending on the number of orders, the manual override may take a while to finish and may cause a timeout. Use it with caution.'|trans({}, 'Modules.InvoiceDateOverride.Admin') }}</p>
            </div>
            <div class="form-wrapper">
                {{ form_row(SettingsForm.invoice_date_override_manual_ignore_previous_date) }}
                {{ form_row(SettingsForm.invoice_date_override_manual_clear_on_unselected_status_change) }}
                {{ form_row(SettingsForm.invoice_date_override_manual_order_id_ranges) }}
            </div>
            <div class="d-flex justify-content-center">
                <button class="btn btn-warning" id="manual-override-button">
                    {{ 'Perform manual override'|trans({}, 'Modules.InvoiceDateOverride.Admin') }}
                </button>
            </div>
        </div>
    </div>
    {{ form_end(SettingsForm) }}
{% endblock %}